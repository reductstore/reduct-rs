name: ci
on:
  push:
    branches: [ main, stable ]
    tags:
      - 'v*'
    paths-ignore:
      - docs/**
      - README.md
      - CHANGELOG.md

  pull_request:
    branches: [ main, stable ]
    paths-ignore:
      - docs/**
      - README.md
      - CHANGELOG.md

env:
  REGISTRY_IMAGE: reduct/store
  MINIMAL_RUST_VERSION: 1.75.0

jobs:
  rust_fmt:
    runs-on: ubuntu-latest
    name: Rust Linter
    steps:
      - uses: actions/checkout@v3
      - name: Check code
        run: cargo fmt --all -- --check


  sdk_tests:
    name: Client SDK Tests
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Run Database
        run: docker run --network=host -v ${PWD}/misc:/misc --env RS_API_TOKEN=TOKEN -d ${{github.repository}}
      - name: Run Client SDK tests
        run: RS_API_TOKEN=TOKEN cargo test --test-threads=1

  sdk_examples:
    name: Client SDK Examples
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        example: [ "hallo_world", "query" ]
    steps:
      - uses: actions/checkout@v3
      - name: Run Database
        run: docker run --network=host -v ${PWD}/misc:/misc --env RS_API_TOKEN=TOKEN -d ${{github.repository}}
      - name: Run Client SDK tests
        run: cargo run --example ${{matrix.example}}

  check_tag:
    runs-on: ubuntu-latest
    name: Check tag
    steps:
      - uses: actions/checkout@v3
      - name: Check tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cargo install cargo-get
          if [ "v$(cargo get package.version)" != "${GITHUB_REF#refs/*/}" ]; then
            echo "Tag does not match version in $PKG_NAME/Cargo.toml"
            exit 1
          fi

  publish_crate:
    runs-on: ubuntu-latest
    name: Publish crate
    needs:
      - sdk_tests
      - sdk_examples
      - check_tag # Only publish on tags
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.MINIMAL_RUST_VERSION }}
      - uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.ACTION_GITHUB_TOKEN }}
      - name: Login
        run: |
          cargo login ${{ secrets.CRATES_IO_TOKEN }}
      - name: Publish reduct-rs
        run: cargo publish -p reduct-rs


  make_release:
    runs-on: ubuntu-latest
    needs:
      - api_tests
      - sdk_tests
      - sdk_examples
      - cli_tests
      - check_tag # Only publish on tags
    name: Make release
    if: ${{ startsWith(github.event.ref, 'refs/tags/v') }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: Release ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body: Copy changes from CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: reductstore-ubuntu-latest
          path: /tmp/
      - name: Load Linux image and get binary
        run: |
          cd /tmp
          tar -czvf reductstore.linux-amd64.tar.gz reductstore
      - name: Upload Linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/reductstore.linux-amd64.tar.gz
          asset_name: reductstore.linux-amd64.tar.gz
          asset_content_type: application/gzip
      - name: Download Macos artifact
        uses: actions/download-artifact@v3
        with:
          name: reductstore-macos-latest
          path: /tmp/
      - name: Archive MacOs binary
        run: |
          cd /tmp
          tar -czvf reductstore.macos-amd64.tar.gz  reductstore
      - name: Upload MacOs artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/reductstore.macos-amd64.tar.gz
          asset_name: reductstore.macos-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: reductstore-windows-latest
          path: /tmp/
      - name: Archive Windows binary
        run: |
          cd /tmp
          zip -o reductstore.win-amd64.zip  reductstore.exe
      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/reductstore.win-amd64.zip
          asset_name: reductstore.win-amd64.zip
          asset_content_type: application/zip
